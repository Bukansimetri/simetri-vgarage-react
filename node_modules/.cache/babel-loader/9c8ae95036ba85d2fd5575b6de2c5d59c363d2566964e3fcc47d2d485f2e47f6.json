{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tuyes\\\\Desktop\\\\skripsi-nxt\\\\dashboard-react\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vehicles = [{\n  id: 1,\n  name: 'Toyota Camry',\n  mileage: 32000,\n  oilChangeDue: true\n}, {\n  id: 2,\n  name: 'Honda Accord',\n  mileage: 27000,\n  oilChangeDue: false\n}, {\n  id: 3,\n  name: 'Ford F-150',\n  mileage: 45000,\n  oilChangeDue: true\n}];\nfunction Dashboard() {\n  _s();\n  const [showNotification, setShowNotification] = useState(true);\n  const navigate = useNavigate();\n\n  // Check login state on mount\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\n    if (!isLoggedIn) {\n      navigate('/login'); // Redirect to login if not logged in\n    }\n  }, [navigate]);\n\n  // Clear login state when Dashboard loads (for demo/testing)\n  localStorage.removeItem('isLoggedIn');\n  const handleRemindMe = () => {\n    setShowNotification(false);\n    // Add your \"remind me\" logic here\n  };\n  const handleServiceDone = () => {\n    setShowNotification(false);\n    // Add your \"service done\" logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"popup-title\",\n          children: \"NOTIFICATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"popup-message\",\n          children: \"TIRE ROTATION AND BRAKE SERVICE DUE IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-distance\",\n          children: \"900 KM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup-btn\",\n            onClick: handleRemindMe,\n            children: \"REMIND ME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup-btn\",\n            onClick: handleServiceDone,\n            children: \"SERVICE DONE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vehicle Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vehicle-list\",\n      children: vehicles.map(vehicle => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/vehicle/${vehicle.id}`,\n        className: \"vehicle-card-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vehicle-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: vehicle.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Mileage: \", vehicle.mileage.toLocaleString(), \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Oil Change Due:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                color: vehicle.oilChangeDue ? 'red' : 'green'\n              },\n              children: vehicle.oilChangeDue ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, vehicle.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ik2pup12yWJ68qvuA4/XxPUN0WY=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","vehicles","id","name","mileage","oilChangeDue","Dashboard","_s","showNotification","setShowNotification","navigate","isLoggedIn","localStorage","getItem","removeItem","handleRemindMe","handleServiceDone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","vehicle","to","toLocaleString","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Tuyes/Desktop/skripsi-nxt/dashboard-react/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Dashboard.css';\r\n\r\nconst vehicles = [\r\n  { id: 1, name: 'Toyota Camry', mileage: 32000, oilChangeDue: true },\r\n  { id: 2, name: 'Honda Accord', mileage: 27000, oilChangeDue: false },\r\n  { id: 3, name: 'Ford F-150', mileage: 45000, oilChangeDue: true },\r\n];\r\n\r\nfunction Dashboard() {\r\n  const [showNotification, setShowNotification] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Check login state on mount\r\n  useEffect(() => {\r\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\r\n    if (!isLoggedIn) {\r\n      navigate('/login'); // Redirect to login if not logged in\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Clear login state when Dashboard loads (for demo/testing)\r\n  localStorage.removeItem('isLoggedIn');\r\n\r\n  const handleRemindMe = () => {\r\n    setShowNotification(false);\r\n    // Add your \"remind me\" logic here\r\n  };\r\n\r\n  const handleServiceDone = () => {\r\n    setShowNotification(false);\r\n    // Add your \"service done\" logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {showNotification && (\r\n        <div className=\"custom-popup-overlay\">\r\n          <div className=\"custom-popup\">\r\n            <h1 className=\"popup-title\">NOTIFICATION</h1>\r\n            <p className=\"popup-message\">TIRE ROTATION AND BRAKE SERVICE DUE IN</p>\r\n            <div className=\"popup-distance\">900 KM</div>\r\n            <div className=\"popup-buttons\">\r\n              <button className=\"popup-btn\" onClick={handleRemindMe}>REMIND ME</button>\r\n              <button className=\"popup-btn\" onClick={handleServiceDone}>SERVICE DONE</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <h1>Vehicle Overview</h1>\r\n      <div className=\"vehicle-list\">\r\n        {vehicles.map((vehicle) => (\r\n          <Link key={vehicle.id} to={`/vehicle/${vehicle.id}`} className=\"vehicle-card-link\">\r\n            <div className=\"vehicle-card\">\r\n              <h3>{vehicle.name}</h3>\r\n              <p>Mileage: {vehicle.mileage.toLocaleString()} km</p>\r\n              <p>\r\n                Oil Change Due:{' '}\r\n                <strong style={{ color: vehicle.oilChangeDue ? 'red' : 'green' }}>\r\n                  {vehicle.oilChangeDue ? 'Yes' : 'No'}\r\n                </strong>\r\n              </p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
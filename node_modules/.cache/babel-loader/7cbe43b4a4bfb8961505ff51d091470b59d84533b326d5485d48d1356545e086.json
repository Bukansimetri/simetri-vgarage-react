{"ast":null,"code":"var _jsxFileName = \"/Users/jumratyahmad/Work/Project/web-vgarage-react/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport './Login.css'; // Reuse Login styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMsg(\"\");\n    setError(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMsg(data.message);\n        setTimeout(() => navigate(\"/login\"), 2000);\n      } else setError(data.message);\n    } catch (err) {\n      setError(\"Network error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"green\"\n        },\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"IUG+aD6d2CB5t+kHAHpMOD8BWTk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","newPassword","setNewPassword","msg","setMsg","error","setError","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","message","setTimeout","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["/Users/jumratyahmad/Work/Project/web-vgarage-react/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport './Login.css'; // Reuse Login styles\r\n\r\nfunction ResetPassword() {\r\n  const { token } = useParams();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    setError(\"\");\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/reset-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ token, newPassword }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMsg(data.message);\r\n        setTimeout(() => navigate(\"/login\"), 2000);\r\n      } else setError(data.message);\r\n    } catch (err) {\r\n      setError(\"Network error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <h2>Reset Password</h2>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New password\"\r\n          value={newPassword}\r\n          onChange={e => setNewPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reset Password</button>\r\n        {msg && <div style={{ color: \"green\" }}>{msg}</div>}\r\n        {error && <div className=\"error\">{error}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,MAAM,CAAC,EAAE,CAAC;IACVE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,KAAK;UAAEC;QAAY,CAAC;MAC7C,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,IAAIR,GAAG,CAACS,EAAE,EAAE;QACVhB,MAAM,CAACc,IAAI,CAACG,OAAO,CAAC;QACpBC,UAAU,CAAC,MAAMf,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;MAC5C,CAAC,MAAMD,QAAQ,CAACY,IAAI,CAACG,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZjB,QAAQ,CAAC,eAAe,CAAC;IAC3B;EACF,CAAC;EAED,oBACET,OAAA;IAAK2B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9B5B,OAAA;MAAM6B,QAAQ,EAAElB,YAAa;MAACgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAClD5B,OAAA;QAAA4B,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBjC,OAAA;QACEkC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAEhC,WAAY;QACnBiC,QAAQ,EAAEzB,CAAC,IAAIP,cAAc,CAACO,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAC9CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFjC,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC5C3B,GAAG,iBAAIN,OAAA;QAAKwC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAb,QAAA,EAAEtB;MAAG;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAClDzB,KAAK,iBAAIR,OAAA;QAAK2B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEpB;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC/B,EAAA,CA5CQD,aAAa;EAAA,QACFJ,SAAS,EAIVC,WAAW;AAAA;AAAA4C,EAAA,GALrBzC,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
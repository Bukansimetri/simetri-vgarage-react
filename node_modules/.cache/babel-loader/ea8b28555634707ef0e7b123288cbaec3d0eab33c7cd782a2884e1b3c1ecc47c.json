{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tuyes\\\\Desktop\\\\skripsi-nxt\\\\dashboard-react\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMsg(\"\");\n    setError(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMsg(data.message);\n        setTimeout(() => navigate(\"/login\"), 2000);\n      } else setError(data.message);\n    } catch (err) {\n      setError(\"Network error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\"\n      },\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"IUG+aD6d2CB5t+kHAHpMOD8BWTk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","newPassword","setNewPassword","msg","setMsg","error","setError","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","message","setTimeout","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Tuyes/Desktop/skripsi-nxt/dashboard-react/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nfunction ResetPassword() {\r\n  const { token } = useParams();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    setError(\"\");\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/reset-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ token, newPassword }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMsg(data.message);\r\n        setTimeout(() => navigate(\"/login\"), 2000);\r\n      } else setError(data.message);\r\n    } catch (err) {\r\n      setError(\"Network error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Reset Password</h2>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"New password\"\r\n        value={newPassword}\r\n        onChange={e => setNewPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Reset Password</button>\r\n      {msg && <div style={{ color: \"green\" }}>{msg}</div>}\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
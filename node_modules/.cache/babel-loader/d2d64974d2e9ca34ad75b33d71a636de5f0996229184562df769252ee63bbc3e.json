{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tuyes\\\\Desktop\\\\skripsi-nxt\\\\dashboard-react\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [vehicles, setVehicles] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [notifIndex, setNotifIndex] = useState(0);\n  const navigate = useNavigate();\n\n  // Check login state on mount and fetch vehicles\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const decoded = jwtDecode(token);\n      const now = Date.now() / 1000;\n      if (decoded.exp < now) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('isLoggedIn');\n        navigate('/login');\n        return;\n      }\n      // Fetch vehicles for this user\n      fetch('http://localhost:5000/api/vehicles', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(data => {\n        setVehicles(data);\n\n        // Notification logic for every vehicle\n        const notifs = [];\n        const currentYear = new Date().getFullYear();\n        data.forEach(vehicle => {\n          // Service notification logic (existing)\n          const last_service_km = Number(vehicle.last_service_km);\n          const service_interval_km = Number(vehicle.service_interval_km);\n          const current_km = Number(vehicle.current_mileage);\n          if (!isNaN(last_service_km) && last_service_km > 0 && !isNaN(service_interval_km) && service_interval_km > 0) {\n            const next_service_km = last_service_km + service_interval_km;\n            const diff = current_km - next_service_km;\n            if (!isNaN(current_km) && (diff > 0 && diff <= 200 || diff < 0 && diff >= -200)) {\n              notifs.push({\n                id: vehicle.id + '-service',\n                name: vehicle.name,\n                diff,\n                message: diff > 0 ? `Reminder: Servis kendaraan ${vehicle.name} sudah lewat!` : `Reminder: Servis kendaraan ${vehicle.name} dalam ${Math.abs(diff)} KM!`,\n                distance: Math.abs(diff)\n              });\n            }\n          }\n\n          // Pajak due notification logic (NEW)\n          if (vehicle.pajak_due) {\n            const pajakYear = new Date(vehicle.pajak_due).getFullYear();\n            if (pajakYear === currentYear) {\n              notifs.push({\n                id: vehicle.id + '-pajak',\n                name: vehicle.name,\n                diff: null,\n                message: `Reminder: Pajak kendaraan ${vehicle.name} jatuh tempo tahun ini (${vehicle.pajak_due.slice(0, 10)})!`,\n                distance: null\n              });\n            }\n          }\n        });\n        setNotifications(notifs);\n        setNotifIndex(0); // Reset to first notification\n      }).catch(() => setVehicles([]));\n    } catch (err) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('isLoggedIn');\n      navigate('/login');\n    }\n  }, [navigate]);\n  const handleNextNotification = () => {\n    if (notifIndex < notifications.length - 1) {\n      setNotifIndex(notifIndex + 1);\n    } else {\n      setNotifications([]);\n      setNotifIndex(0);\n    }\n    // Only send notificationText\n    notifyUser(' ');\n  };\n  const handleCloseNotification = () => {\n    if (notifications.length > 0 && notifications[notifIndex]) {\n      const notif = notifications[notifIndex];\n      const vehicleId = notif.id.split('-')[0];\n      const notificationType = notif.id.split('-')[1];\n      updateVehicleOnNotification(vehicleId, notificationType);\n    }\n    if (notifIndex < notifications.length - 1) {\n      setNotifIndex(notifIndex + 1);\n    } else {\n      setNotifications([]);\n      setNotifIndex(0);\n    }\n  };\n  const notifyUser = async notificationText => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/notify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          notificationText\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert('Failed: ' + data.message + '\\nError: ' + data.error);\n      } else {\n        // Optionally, you can remove this alert to avoid spamming the user\n        // alert('Notification and email sent!');\n      }\n    } catch (err) {\n      alert('Error: ' + err.message);\n    }\n  };\n\n  // Update vehicle data when a notification is sent\n  const updateVehicleOnNotification = async (vehicleId, notificationType) => {\n    const token = localStorage.getItem('token');\n    // Example: update a 'notified' field or any other relevant field\n    // You can also update last_service_km, pajak_due, etc. as needed\n    try {\n      await fetch(`http://localhost:5000/api/vehicles/${vehicleId}`, {\n        method: 'PATCH',\n        // or 'PUT' if you update the whole vehicle\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          notified: true,\n          // Example field, adjust as needed\n          notificationType // Optionally log what type of notification was sent\n        })\n      });\n    } catch (err) {\n      // Optionally handle error\n      console.error('Failed to update vehicle after notification:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [notifications.length > 0 && notifications[notifIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"popup-title\",\n          children: \"NOTIFICATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"popup-message\",\n          children: notifications[notifIndex].message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-distance\",\n          children: notifications[notifIndex].distance !== null ? `${notifications[notifIndex].distance} KM` : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup-btn\",\n            onClick: handleNextNotification,\n            children: \"REMIND ME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"popup-btn\",\n            onClick: handleCloseNotification,\n            children: \"SERVICE DONE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, notifications[notifIndex].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vehicle Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vehicle-list\",\n      children: vehicles.map(vehicle => {\n        var _vehicle$current_mile;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/vehicle/${vehicle.id}`,\n          className: \"vehicle-card-link\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vehicle-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: vehicle.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Mileage: \", (_vehicle$current_mile = vehicle.current_mileage) === null || _vehicle$current_mile === void 0 ? void 0 : _vehicle$current_mile.toLocaleString(), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, vehicle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"+u7wTXdpKMbD8Qd9dquT+V8MIHw=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jwtDecode","axios","jsxDEV","_jsxDEV","Dashboard","_s","vehicles","setVehicles","notifications","setNotifications","notifIndex","setNotifIndex","navigate","token","localStorage","getItem","decoded","now","Date","exp","removeItem","fetch","headers","then","res","json","data","notifs","currentYear","getFullYear","forEach","vehicle","last_service_km","Number","service_interval_km","current_km","current_mileage","isNaN","next_service_km","diff","push","id","name","message","Math","abs","distance","pajak_due","pajakYear","slice","catch","err","handleNextNotification","length","notifyUser","handleCloseNotification","notif","vehicleId","split","notificationType","updateVehicleOnNotification","notificationText","response","method","body","JSON","stringify","ok","alert","error","notified","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_vehicle$current_mile","to","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Tuyes/Desktop/skripsi-nxt/dashboard-react/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nfunction Dashboard() {\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [notifIndex, setNotifIndex] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  // Check login state on mount and fetch vehicles\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    try {\r\n      const decoded = jwtDecode(token);\r\n      const now = Date.now() / 1000;\r\n      if (decoded.exp < now) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('isLoggedIn');\r\n        navigate('/login');\r\n        return;\r\n      }\r\n      // Fetch vehicles for this user\r\n      fetch('http://localhost:5000/api/vehicles', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setVehicles(data);\r\n\r\n          // Notification logic for every vehicle\r\n          const notifs = [];\r\n          const currentYear = new Date().getFullYear();\r\n\r\n          data.forEach(vehicle => {\r\n            // Service notification logic (existing)\r\n            const last_service_km = Number(vehicle.last_service_km);\r\n            const service_interval_km = Number(vehicle.service_interval_km);\r\n            const current_km = Number(vehicle.current_mileage);\r\n\r\n            if (\r\n              !isNaN(last_service_km) && last_service_km > 0 &&\r\n              !isNaN(service_interval_km) && service_interval_km > 0\r\n            ) {\r\n              const next_service_km = last_service_km + service_interval_km;\r\n              const diff = current_km - next_service_km;\r\n              if (\r\n                !isNaN(current_km) &&\r\n                ((diff > 0 && diff <= 200) || (diff < 0 && diff >= -200))\r\n              ) {\r\n                notifs.push({\r\n                  id: vehicle.id + '-service',\r\n                  name: vehicle.name,\r\n                  diff,\r\n                  message: diff > 0\r\n                    ? `Reminder: Servis kendaraan ${vehicle.name} sudah lewat!`\r\n                    : `Reminder: Servis kendaraan ${vehicle.name} dalam ${Math.abs(diff)} KM!`,\r\n                  distance: Math.abs(diff)\r\n                });\r\n              }\r\n            }\r\n\r\n            // Pajak due notification logic (NEW)\r\n            if (vehicle.pajak_due) {\r\n              const pajakYear = new Date(vehicle.pajak_due).getFullYear();\r\n              if (pajakYear === currentYear) {\r\n                notifs.push({\r\n                  id: vehicle.id + '-pajak',\r\n                  name: vehicle.name,\r\n                  diff: null,\r\n                  message: `Reminder: Pajak kendaraan ${vehicle.name} jatuh tempo tahun ini (${vehicle.pajak_due.slice(0, 10)})!`,\r\n                  distance: null\r\n                });\r\n              }\r\n            }\r\n          });\r\n\r\n          setNotifications(notifs);\r\n          setNotifIndex(0); // Reset to first notification\r\n        })\r\n        .catch(() => setVehicles([]));\r\n    } catch (err) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('isLoggedIn');\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleNextNotification = () => {\r\n    if (notifIndex < notifications.length - 1) {\r\n      setNotifIndex(notifIndex + 1);\r\n    } else {\r\n      setNotifications([]);\r\n      setNotifIndex(0);\r\n    }\r\n    // Only send notificationText\r\n    notifyUser(' ');\r\n  };\r\n\r\nconst handleCloseNotification = () => {\r\n  if (notifications.length > 0 && notifications[notifIndex]) {\r\n    const notif = notifications[notifIndex];\r\n    const vehicleId = notif.id.split('-')[0];\r\n    const notificationType = notif.id.split('-')[1];\r\n    updateVehicleOnNotification(vehicleId, notificationType);\r\n  }\r\n  if (notifIndex < notifications.length - 1) {\r\n    setNotifIndex(notifIndex + 1);\r\n  } else {\r\n    setNotifications([]);\r\n    setNotifIndex(0);\r\n  }\r\n};\r\n  const notifyUser = async (notificationText) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/notify', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ notificationText }),\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        alert('Failed: ' + data.message + '\\nError: ' + data.error);\r\n      } else {\r\n        // Optionally, you can remove this alert to avoid spamming the user\r\n        // alert('Notification and email sent!');\r\n      }\r\n    } catch (err) {\r\n      alert('Error: ' + err.message);\r\n    }\r\n  };\r\n\r\n  // Update vehicle data when a notification is sent\r\n  const updateVehicleOnNotification = async (vehicleId, notificationType) => {\r\n    const token = localStorage.getItem('token');\r\n    // Example: update a 'notified' field or any other relevant field\r\n    // You can also update last_service_km, pajak_due, etc. as needed\r\n    try {\r\n      await fetch(`http://localhost:5000/api/vehicles/${vehicleId}`, {\r\n        method: 'PATCH', // or 'PUT' if you update the whole vehicle\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          notified: true, // Example field, adjust as needed\r\n          notificationType, // Optionally log what type of notification was sent\r\n        }),\r\n      });\r\n    } catch (err) {\r\n      // Optionally handle error\r\n      console.error('Failed to update vehicle after notification:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {notifications.length > 0 && notifications[notifIndex] && (\r\n        <div className=\"custom-popup-overlay\" key={notifications[notifIndex].id}>\r\n          <div className=\"custom-popup\">\r\n            <h1 className=\"popup-title\">NOTIFICATION</h1>\r\n            <p className=\"popup-message\">{notifications[notifIndex].message}</p>\r\n            <div className=\"popup-distance\">\r\n              {notifications[notifIndex].distance !== null ? `${notifications[notifIndex].distance} KM` : ''}\r\n            </div>\r\n            <div className=\"popup-buttons\">\r\n              <button className=\"popup-btn\" onClick={handleNextNotification}>REMIND ME</button>\r\n              <button className=\"popup-btn\" onClick={handleCloseNotification}>SERVICE DONE</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <h1>Vehicle Overview</h1>\r\n      <div className=\"vehicle-list\">\r\n        {vehicles.map((vehicle) => (\r\n          <Link key={vehicle.id} to={`/vehicle/${vehicle.id}`} className=\"vehicle-card-link\">\r\n            <div className=\"vehicle-card\">\r\n              <h3>{vehicle.name}</h3>\r\n              <p>Mileage: {vehicle.current_mileage?.toLocaleString()} km</p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}